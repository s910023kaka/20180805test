// <auto-generated />
using System;
using Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace _20180805.Migrations
{
    [DbContext(typeof(AppSystemContext))]
    partial class AppSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Application.Models.AppProfile", b =>
                {
                    b.Property<int>("AppProfileID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<int>("ServerID");

                    b.Property<string>("SqlServer");

                    b.Property<int?>("Type");

                    b.Property<string>("VSTS");

                    b.Property<string>("Version");

                    b.HasKey("AppProfileID");

                    b.HasIndex("ServerID");

                    b.ToTable("AppProfiles");
                });

            modelBuilder.Entity("Application.Models.Server", b =>
                {
                    b.Property<int>("ServerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.HasKey("ServerID");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Application.Models.AppProfile", b =>
                {
                    b.HasOne("Application.Models.Server", "Server")
                        .WithMany("AppProfiles")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
